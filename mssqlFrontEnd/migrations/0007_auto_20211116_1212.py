# Generated by Django 3.0.10 on 2021-11-16 17:12

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mssqlFrontEnd', '0006_auto_20211004_0930'),
    ]

    operations = [
        migrations.CreateModel(
            name='DumbyTable',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('tagname', models.CharField(blank=True, db_column='TagName', max_length=128, null=True)),
                ('numericid', models.IntegerField(blank=True, db_column='NumericID', null=True)),
                ('tagvalue', models.FloatField(blank=True, db_column='TagValue', null=True)),
                ('recordtime', models.DateTimeField(blank=True, db_column='RecordTime', null=True)),
                ('quality', models.IntegerField(blank=True, db_column='Quality', null=True)),
            ],
            options={
                'db_table': 'Dumby_Table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FT01',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagname', models.CharField(blank=True, db_column='TagName', max_length=128, null=True)),
                ('numericid', models.IntegerField(blank=True, db_column='NumericID', null=True)),
                ('tagvalue', models.FloatField(blank=True, db_column='TagValue', null=True)),
                ('recordtime', models.DateTimeField(blank=True, db_column='RecordTime', null=True)),
                ('quality', models.IntegerField(blank=True, db_column='Quality', null=True)),
            ],
            options={
                'db_table': 'FT01',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GA05',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagname', models.CharField(blank=True, db_column='TagName', max_length=128, null=True)),
                ('numericid', models.IntegerField(blank=True, db_column='NumericID', null=True)),
                ('tagvalue', models.FloatField(blank=True, db_column='TagValue', null=True)),
                ('recordtime', models.DateTimeField(blank=True, db_column='RecordTime', null=True)),
                ('quality', models.IntegerField(blank=True, db_column='Quality', null=True)),
            ],
            options={
                'db_table': 'GA05',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GA29',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagname', models.CharField(blank=True, db_column='TagName', max_length=128, null=True)),
                ('numericid', models.IntegerField(blank=True, db_column='NumericID', null=True)),
                ('tagvalue', models.FloatField(blank=True, db_column='TagValue', null=True)),
                ('recordtime', models.DateTimeField(blank=True, db_column='RecordTime', null=True)),
                ('quality', models.IntegerField(blank=True, db_column='Quality', null=True)),
            ],
            options={
                'db_table': 'GA29',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keptest1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.IntegerField(db_column='Temperature')),
                ('time', models.DateTimeField(blank=True, db_column='Time', null=True)),
            ],
            options={
                'db_table': 'KepTest1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KT09',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagname', models.CharField(blank=True, db_column='TagName', max_length=128, null=True)),
                ('numericid', models.IntegerField(blank=True, db_column='NumericID', null=True)),
                ('tagvalue', models.FloatField(blank=True, db_column='TagValue', null=True)),
                ('recordtime', models.DateTimeField(blank=True, db_column='RecordTime', null=True)),
                ('quality', models.IntegerField(blank=True, db_column='Quality', null=True)),
            ],
            options={
                'db_table': 'KT09',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KT14',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagname', models.CharField(blank=True, db_column='TagName', max_length=128, null=True)),
                ('numericid', models.IntegerField(blank=True, db_column='NumericID', null=True)),
                ('tagvalue', models.FloatField(blank=True, db_column='TagValue', null=True)),
                ('recordtime', models.DateTimeField(blank=True, db_column='RecordTime', null=True)),
                ('quality', models.IntegerField(blank=True, db_column='Quality', null=True)),
            ],
            options={
                'db_table': 'KT14',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KT15',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagname', models.CharField(blank=True, db_column='TagName', max_length=128, null=True)),
                ('numericid', models.IntegerField(blank=True, db_column='NumericID', null=True)),
                ('tagvalue', models.FloatField(blank=True, db_column='TagValue', null=True)),
                ('recordtime', models.DateTimeField(blank=True, db_column='RecordTime', null=True)),
                ('quality', models.IntegerField(blank=True, db_column='Quality', null=True)),
            ],
            options={
                'db_table': 'KT15',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KT19',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagname', models.CharField(blank=True, db_column='TagName', max_length=150, null=True)),
                ('numericid', models.IntegerField(blank=True, db_column='NumericID', null=True)),
                ('tagvalue', models.FloatField(blank=True, db_column='TagValue', null=True)),
                ('recordtime', models.DateTimeField(blank=True, db_column='RecordTime', null=True)),
                ('quality', models.IntegerField(blank=True, db_column='Quality', null=True)),
            ],
            options={
                'db_table': 'KT19',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KT22',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagname', models.CharField(blank=True, db_column='TagName', max_length=128, null=True)),
                ('numericid', models.IntegerField(blank=True, db_column='NumericID', null=True)),
                ('tagvalue', models.FloatField(blank=True, db_column='TagValue', null=True)),
                ('recordtime', models.DateTimeField(blank=True, db_column='RecordTime', null=True)),
                ('quality', models.IntegerField(blank=True, db_column='Quality', null=True)),
            ],
            options={
                'db_table': 'KT22',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Departments',
        ),
        migrations.DeleteModel(
            name='Employees',
        ),
        migrations.DeleteModel(
            name='Pressure',
        ),
        migrations.DeleteModel(
            name='Temperatures',
        ),
    ]
